<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Create Post - socialnetto</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
</head>
<body class="bg-gray-50 min-h-screen">
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <h1 class="text-2xl font-bold text-indigo-600">socialnetto</h1>
                </div>
                <div id="btns" class="flex items-center space-x-4"></div>
            </div>
        </div>
    </nav>

    <main class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="bg-white rounded-xl shadow-lg overflow-hidden">
            <div class="p-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-8">Create New Post</h2>

                <form id="createPostForm" class="space-y-6">
                    <div>
                        <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
                        <input type="text" id="title" 
                            class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                            placeholder="Give your post a title">
                    </div>

                    <div>
                        <label for="content" class="block text-sm font-medium text-gray-700">Content</label>
                        <textarea id="content" rows="6" 
                            class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                            placeholder="Write your post content here"></textarea>
                    </div>

                    <div>
                        <label for="media" class="block text-sm font-medium text-gray-700">Media (optional)</label>
                        <input type="file" id="media" accept="image/*, video/*"
                            class="mt-1 block w-full px-3 py-2 text-sm text-gray-700 
                            file:mr-4 file:py-2 file:px-4
                            file:rounded-full file:border-0
                            file:text-sm file:font-semibold
                            file:bg-indigo-50 file:text-indigo-700
                            hover:file:bg-indigo-100">
                        <p class="mt-2 text-sm text-gray-500">Upload an image or video to enhance your post</p>
                    </div>

                    <div>
                        <button type="submit" 
                            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Create Post
                        </button>
                    </div>

                    <p id="msg" class="text-red-600 text-center"></p>
                </form>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        function getState() {
            const btns = document.getElementById('btns');
            const token = localStorage.getItem('token');
            const user = localStorage.getItem('user');
            const userData = user ? JSON.parse(user) : null;
            
            if (!token || !userData) {
                btns.innerHTML = `
                    <a href="/login" class="text-gray-600 hover:text-indigo-600 transition-colors">Login</a>
                    <a href="/signup" class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">Sign Up</a>
                `;
            } else {
                btns.innerHTML = `
                    <a href="/" class="text-gray-600 hover:text-indigo-600 transition-colors">Home</a>
                    <a href="/dashboard" class="text-gray-600 hover:text-indigo-600 transition-colors">Dashboard</a>
                    <a href="/profile/${userData.username}" class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">Profile</a>
                `;
            }
        }

        document.addEventListener('DOMContentLoaded', getState);

        document.getElementById('createPostForm').addEventListener('submit', async function(event) {
            event.preventDefault();

            const title = document.getElementById('title').value.trim();
            const content = document.getElementById('content').value.trim();
            const media = document.getElementById('media').files[0];
            const messageElement = document.getElementById('msg');

            messageElement.textContent = '';

            if (!title || !content) {
                messageElement.textContent = "Title and content are required";
                return;
            }

            const formData = new FormData();
            formData.append('title', title);
            formData.append('content', content);
            if (media) formData.append('media', media);

            try {
                const token = localStorage.getItem('token');
                if (!token) {
                    window.location.href = '/login';
                    return;
                }

                const response = await axios.post('https://express-backend-sigma.vercel.app/posts/new', formData, {
                    headers: {
                        'Authorization': `Bearer ${token}`,
                    },
                });

                if (response?.data?.post?._id) {
                    window.location.href = `/posts/${response.data.post._id}`;
                } else {
                    messageElement.textContent = 'Error creating post';
                }

            } catch (error) {
                console.error('Error creating post:', error);
                messageElement.textContent = error.response?.data?.message || 'Error creating post';
            }
        });
    </script>
</body>
</html>