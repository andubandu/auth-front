<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Create Post</title>
  <style>
    * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
  }
 body {
    background-color: #f4f7fa;
    color: #333;
    font-size: 16px;
  }
  
  h1 {
    font-size: 2rem;
    color: #2c3e50;
    margin-bottom: 20px;
    text-align: center;
  }
  
  .form-container {
    width: 100%;
    max-width: 600px;
    margin: 50px auto;
    padding: 20px;
    background: white;
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    overflow: hidden;
  }
  
  h1 {
    font-size: 2rem;
    color: #34495e;
    margin-bottom: 20px;
    text-align: center;
  }
  
  form {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }
  
  label {
    font-size: 1rem;
    color: #555;
    font-weight: 500;
    margin-bottom: 5px;
  }
  
  input, textarea {
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 1rem;
    width: 100%;
    margin-bottom: 10px;
    transition: border-color 0.3s ease;
  }
  
  input:focus, textarea:focus {
    border-color: #2980b9;
    outline: none;
  }
  
  button {
    background-color: #2980b9;
    color: white;
    padding: 12px;
    border-radius: 8px;
    border: none;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  button:hover {
    background-color: #3498db;
  }
  
  input[type="file"] {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 8px;
    cursor: pointer;
  }
  
  #msg {
    text-align: center;
    font-size: 1rem;
    margin-top: 15px;
  }


  @media (max-width: 768px) {
    .form-container {
      padding: 20px;
    }
  
    h1 {
      font-size: 1.8rem;
    }
  
    button {
      padding: 15px;
      font-size: 1.2rem;
    }
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 40px;
    border-bottom: 2px solid #ddd;
    padding-bottom: 10px;
}

header h1 {
    font-size: 1.8rem;
    color: #222;
    margin: 0;
    line-height: 1;
    padding: 6px 0;
    margin-top: 4px; 
}


#btns a {
    text-decoration: none;
    color: #007bff;
    margin-left: 15px;
    font-weight: bold;
}

#btns a:hover {
    text-decoration: underline;
}
  
  </style>
</head>
<body>

  <header>
    <h1>socialnetto</h1>
    <div id="btns"></div>
</header>
  <div class="form-container">
    <h1>Create New Post</h1>

    <form id="createPostForm">
      <div>
        <label for="title">Post Title</label>
        <input type="text" id="title" placeholder="Post Title" required />
      </div>
      <div>
        <label for="content">Content</label>
        <textarea id="content" placeholder="Write your post content here" required></textarea>
      </div>
      <div>
        <label for="media">Media (optional)</label>
        <input type="file" id="media" accept="image/*, video/*" />
      </div>
      <button type="submit">Create Post</button>
    </form>

    <p id="msg" style="color: red;"></p>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
        function getState() {
    const btns = document.getElementById('btns');
    const token = localStorage.getItem('token');
    const user = localStorage.getItem('user');
    const userData = user ? JSON.parse(user) : null;
    if (!token || !userData) {
        btns.innerHTML = `
            <a href="/login">Login</a>
            <a href="/signup">Signup</a>
        `;
    } else {
        btns.innerHTML = `
        <a href="/">Homepage</a>
            <a href="/dashboard">Dashboard</a>
            <a href="/profile/${userData.username}">Your Profile</a>
        `;
    }
}
document.addEventListener('DOMContentLoaded', () => {
    getState();
});
    document.getElementById('createPostForm').addEventListener('submit', async function (event) {
  event.preventDefault();

  const title = document.getElementById('title').value.trim();
  const content = document.getElementById('content').value.trim();
  const media = document.getElementById('media').files[0];

  const messageElement = document.getElementById('msg');

  messageElement.textContent = '';

  if (!title || !content) {
    messageElement.textContent = "Title and content are required.";
    return;
  }

  const formData = new FormData();
  formData.append('title', title);
  formData.append('content', content);
  if (media) formData.append('media', media);

  try {
    const token = localStorage.getItem('token');
    if (!token) {
      alert("You must be logged in to create a post.");
      return;
    }

    const response = await axios.post('https://express-backend-sigma.vercel.app/posts/new', formData, {
      headers: {
        'Authorization': `Bearer ${token}`,
      },
    });

    console.log('Post creation response:', response);

    if (response && response.data && response.data.post && response.data.post._id) {
      const postId = response.data.post._id;
      window.location.href = `/posts/${postId}`;
    } else {
      messageElement.textContent = 'Unexpected response format. Post not created.';
    }

  } catch (error) {
    console.error('Error creating post:', error);
    messageElement.textContent = error.response?.data?.message || 'An error occurred while creating the post.';
  }
});
  </script>
</body>
</html>
