<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Posts</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', sans-serif;
            color: #333;
        }

        body {
            background-color: #f9f9f9;
            padding: 20px;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
            border-bottom: 2px solid #ddd;
            padding-bottom: 10px;
        }

        header h1 {
            font-size: 2rem;
            color: #222;
        }

        #btns a {
            text-decoration: none;
            color: #007bff;
            margin-left: 15px;
            font-weight: bold;
        }

        #btns a:hover {
            text-decoration: underline;
        }

        #posts {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 30px;
            padding: 20px 0;
        }

        .post {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        }

        .post h1 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: #111;
        }

        .post p {
            margin: 8px 0;
        }

        .author-info {
            display: flex;
            align-items: center;
            gap: 10px;
            margin: 10px 0;
        }

        .author-info img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .author-info span {
            font-weight: 600;
            font-size: 1rem;
        }

        .media {
            margin-top: 15px;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .media img,
        .media video {
            width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        }

        .like-button {
            background-color: #ff4757;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1rem;
            margin-top: 10px;
            transition: background-color 0.2s;
        }

        .like-button:hover {
            background-color: #e84118;
        }

        /* Notification Dropdown */
        #notifications-container {
            display: none;
            position: absolute;
            right: 20px;
            top: 60px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 300px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        #notifications-list {
            padding: 10px;
            max-height: 200px;
            overflow-y: auto;
        }

        #notifications-container h3 {
            padding: 10px;
            background-color: #f1f1f1;
            margin: 0;
        }

        .notification-item {
            margin-bottom: 10px;
            padding: 5px;
            background-color: #f9f9f9;
            border-radius: 5px;
        }

        .notification-item button {
            margin-right: 5px;
            padding: 5px 10px;
            cursor: pointer;
        }

        /* Responsive Styles */
        @media (max-width: 1024px) {
            #posts {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 600px) {
            #posts {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <header>
        <h1>socialnetto</h1>
        <div id="btns">
            <button id="notification-btn" style="background: none; border: none; cursor: pointer;">
                <img src="https://img.icons8.com/ios/50/000000/mail.png" alt="Notifications" style="width: 30px; height: 30px;" />
            </button>
        </div>
    </header>

    <div id="loader" style="display: none; text-align: center; margin-top: 50px;">
        <img src="https://res.cloudinary.com/dyuabsnoo/image/upload/v1746875532/cat-kitten_rwstll.gif" alt="Loading..." style="width: 320px; height: 269px;">
        <h1>loading posts</h1>
    </div>

    <div id="posts"></div>

    <div id="notifications-container">
        <h3>Friend Requests</h3>
        <div id="notifications-list">
            <% if (requests && requests.length > 0) { %>
                <% requests.forEach(function(request) { %>
                    <div class="notification-item">
                        <p><strong><%= request.requesterUsername %></strong> sent you a friend request.</p>
                        <button onclick="acceptRequest('<%= request.requesterUsername %>')">Accept</button>
                        <button onclick="declineRequest('<%= request.requesterUsername %>')">Decline</button>
                    </div>
                <% }); %>
            <% } else { %>
                <p>No new friend requests.</p>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.getElementById('notification-btn').addEventListener('click', () => {
            const notificationsContainer = document.getElementById('notifications-container');
            notificationsContainer.style.display = notificationsContainer.style.display === 'block' ? 'none' : 'block';
        });

        async function acceptRequest(requesterUsername) {
            const token = localStorage.getItem('token');
            if (!token) {
                showToast('You need to be logged in to accept requests.', '#ff6b6b');
                return;
            }

            try {
                const response = await fetch('/friends/accept-request', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ requesterUsername })
                });

                if (response.ok) {
                    showToast(`Friend request from ${requesterUsername} accepted.`, '#28a745');
                    document.getElementById('notifications-container').style.display = 'none';
                } else {
                    showToast('Error accepting friend request.', '#ff6b6b');
                }
            } catch (err) {
                showToast('Error while accepting the request.', '#ff6b6b');
            }
        }

        async function declineRequest(requesterUsername) {
            const token = localStorage.getItem('token');
            if (!token) {
                showToast('You need to be logged in to decline requests.', '#ff6b6b');
                return;
            }

            try {
                const response = await fetch('/friends/decline-request', {
                    method: 'POST',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ requesterUsername })
                });

                if (response.ok) {
                    showToast(`Friend request from ${requesterUsername} declined.`, '#ff6b6b');
                    document.getElementById('notifications-container').style.display = 'none';
                } else {
                    showToast('Error declining friend request.', '#ff6b6b');
                }
            } catch (err) {
                showToast('Error while declining the request.', '#ff6b6b');
            }
        }

        function showToast(message, bgColor = "#333") {
            Toastify({
                text: message,
                duration: 2000,
                gravity: "top",
                position: "right",
                backgroundColor: bgColor
            }).showToast();
        }

        async function fetchPosts() {
            const postsContainer = document.getElementById('posts');
            const loader = document.getElementById('loader');

            loader.style.display = 'block';
            postsContainer.innerHTML = '';

            try {
                const response = await fetch('/posts');
                const posts = await response.json();

                if (posts.length === 0) {
                    postsContainer.innerHTML = '<h3>No posts available</h3>';
                    return;
                }

                postsContainer.innerHTML = posts.map(post => `
                    <div class="post">
                        <h1>${post.title}</h1>
                        <p>${post.content}</p
                                </div>            `).join('');
        } catch (error) {
            postsContainer.innerHTML = '<h3>Failed to load posts</h3>';
        } finally {
            loader.style.display = 'none';
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        fetchPosts();
    });
</script>
</body> </html>
